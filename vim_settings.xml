<application>
  <component name="VimEditorSettings">
    <editor>
      <key-repeat enabled="false" />
    </editor>
  </component>
  <component name="VimHistorySettings">
    <history>
      <history-search>
        <entry encoding="base64">XDxTRUxFQ1RcPg==</entry>
        <entry>private</entry>
        <entry encoding="base64">XDxfdXNlcklkXD4=</entry>
        <entry encoding="base64">XDxwdWJsaWNcPg==</entry>
        <entry encoding="base64">XDwsXD4=</entry>
        <entry>,</entry>
        <entry encoding="base64">XDxzd2l0Y2hcPg==</entry>
        <entry encoding="base64">ICAgIA==</entry>
        <entry encoding="base64">PSA=</entry>
        <entry>: exampleId</entry>
        <entry encoding="base64">XDxhd2FpdFw+</entry>
        <entry encoding="base64">OiA=</entry>
        <entry>json.</entry>
        <entry encoding="base64">XDxodHRwc1w+</entry>
        <entry>'</entry>
        <entry>:</entry>
        <entry encoding="base64">XDxvcmdhbmlzYXRpb25cPg==</entry>
        <entry encoding="base64">XDxwcml2YXRlXD4=</entry>
        <entry encoding="base64">XDxsb2NhdGlvbl9pZFw+</entry>
        <entry encoding="base64">XDwzMjA5NDc0XD4=</entry>
      </history-search>
      <history-cmd>
        <entry>e Dockerfile</entry>
        <entry>so</entry>
        <entry>w production.yml</entry>
        <entry>vso</entry>
        <entry encoding="base64">dnNwIA==</entry>
        <entry>action SplitHorizontally</entry>
        <entry encoding="base64">JzwsJz5hY3Rpb24gVGFiU2hpZnRBY3Rpb25zLk1vdmVGb2N1c1JpZ2h0</entry>
        <entry>q</entry>
        <entry>w</entry>
        <entry>action EditorSelectWord</entry>
        <entry>x</entry>
        <entry>sp</entry>
        <entry>action TabShiftActions.MoveFocusUp</entry>
        <entry>action TabShiftActions.MoveFocusDown</entry>
        <entry>e knexfile.js</entry>
        <entry>set multiple-cursors</entry>
        <entry>action TabShiftActions.MoveFocusLeft</entry>
        <entry>action TabShiftActions.MoveFocusRight</entry>
        <entry>vsp</entry>
        <entry>action AceAction</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimKeySettings">
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>shift ctrl pressed 6</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>shift ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/Projects/atmosphere/api/app/Application/UseCase/Playlist/Command/RemovePlaylistItem.php" timestamp="1588761988643">
        <mark key="[" line="16" column="6" />
        <mark key="]" line="16" column="33" />
        <mark key="." line="16" column="32" />
        <mark key="^" line="16" column="33" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/api/app/Infrastructure/PubSub/KafkaPublisher.php" timestamp="1588764133779">
        <mark key="[" line="39" column="45" />
        <mark key="]" line="39" column="46" />
        <mark key="." line="39" column="46" />
        <mark key="^" line="39" column="57" />
      </file>
      <file name="$USER_HOME$/Projects/scripts/kollekt/sendBulkEmail/emails.csv" timestamp="1588611506367">
        <mark key="[" line="40" column="0" />
        <mark key="]" line="40" column="0" />
        <mark key="^" line="40" column="0" />
        <mark key="." line="40" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/api/app/Application/UseCase/Playlist/Command/DisablePlaylistItem.php" timestamp="1588763683301">
        <mark key="[" line="56" column="0" />
        <mark key="]" line="56" column="0" />
        <mark key="." line="56" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/api/app/Application/Event/EventPublisher.php" timestamp="1588763971851">
        <mark key="[" line="43" column="0" />
        <mark key="]" line="43" column="0" />
        <mark key="." line="43" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/api/storage/logs/lumen.log" timestamp="1588766851589">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/services/streaming-service-sync/src/test.ts" timestamp="1588590050050">
        <mark key="[" line="31" column="0" />
        <mark key="]" line="31" column="0" />
        <mark key="." line="31" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/api/app/Domain/Playlist/Event/TrackEnabledInPlaylist.php" timestamp="1588760530702">
        <mark key="[" line="9" column="11" />
        <mark key="]" line="9" column="18" />
        <mark key="." line="9" column="17" />
        <mark key="^" line="9" column="18" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/api/app/Http/Controllers/PlaylistController.php" timestamp="1588767029439">
        <mark key="[" line="107" column="20" />
        <mark key="]" line="107" column="46" />
        <mark key="^" line="107" column="47" />
        <mark key="." line="107" column="46" />
      </file>
      <file name="$USER_HOME$/Projects/scripts/kollekt/sendBulkEmail/index.js" timestamp="1588754272837">
        <mark key="[" line="22" column="0" />
        <mark key="]" line="22" column="0" />
        <mark key="." line="22" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/api/app/Domain/Playlist/PlaylistItem.php" timestamp="1588763094713">
        <mark key="[" line="113" column="12" />
        <mark key="]" line="113" column="13" />
        <mark key="^" line="113" column="13" />
        <mark key="." line="113" column="12" />
      </file>
      <file name="/Dummy.txt" timestamp="1588766961718">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/api/app/Providers/EventServiceProvider.php" timestamp="1588763813811">
        <mark key="[" line="105" column="20" />
        <mark key="]" line="105" column="20" />
        <mark key="." line="105" column="20" />
      </file>
      <file name="$USER_HOME$/Projects/scripts/kollekt/sendBulkEmail/front.js" timestamp="1588613788915">
        <mark key="'" line="23" column="42" />
        <mark key="[" line="35" column="27" />
        <mark key="]" line="35" column="27" />
        <mark key="^" line="35" column="31" />
        <mark key="." line="35" column="27" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/api/app/Domain/Playlist/Event/TrackDisabledInPlaylist.php" timestamp="1588760415489" />
      <file name="/GraphQL.result.json" timestamp="1588756311305">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/services/streaming-service-sync/src/playlistSync.ts" timestamp="1588594006450">
        <mark key="[" line="45" column="44" />
        <mark key="]" line="45" column="58" />
        <mark key="^" line="45" column="58" />
        <mark key="." line="45" column="57" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/api/app/Http/routes.php" timestamp="1588767040678">
        <mark key="[" line="161" column="90" />
        <mark key="]" line="161" column="117" />
        <mark key="." line="161" column="90" />
        <mark key="^" line="162" column="106" />
      </file>
      <file name="$USER_HOME$/Projects/atmosphere/api/app/Application/UseCase/Playlist/Command/EnablePlaylistItem.php" timestamp="1588760815664">
        <mark key="[" line="54" column="15" />
        <mark key="]" line="54" column="23" />
        <mark key="." line="54" column="22" />
        <mark key="^" line="54" column="23" />
      </file>
    </filemarks>
    <jumps>
      <jump line="2" column="33" filename="$USER_HOME$/Projects/test/node-encrypted-audio/src/Player.ts" />
      <jump line="139" column="0" filename="$USER_HOME$/Projects/test/node-encrypted-audio/node_modules/speaker/deps/mpg123/src/output/coreaudio.c" />
      <jump line="103" column="40" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/tutorial/src/Profile.js" />
      <jump line="49" column="95" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/tutorial/src/Profile.js" />
      <jump line="139" column="4" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/tutorial/src/Profile.js" />
      <jump line="52" column="53" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/tutorial/src/Profile.js" />
      <jump line="61" column="34" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/tutorial/src/Recorder.js" />
      <jump line="131" column="32" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/tutorial/src/Recorder.js" />
      <jump line="28" column="0" filename="$USER_HOME$/Projects/test/node-encrypted-audio/Dockerfile.template" />
      <jump line="104" column="2" filename="$USER_HOME$/Projects/personal/crypto/tardis-node/src/realtimefeeds/RealTimeFeedStomp.ts" />
      <jump line="164" column="0" filename="$USER_HOME$/Projects/personal/crypto/tardis-node/src/realtimefeeds/RealTimeFeedStomp.ts" />
      <jump line="115" column="0" filename="$USER_HOME$/Projects/personal/crypto/tardis-node/src/realtimefeeds/realtimefeed.ts" />
      <jump line="176" column="0" filename="$USER_HOME$/Projects/personal/crypto/tardis-node/src/realtimefeeds/realtimefeed.ts" />
      <jump line="88" column="0" filename="$USER_HOME$/Projects/personal/crypto/tardis-node/src/realtimefeeds/realtimefeed.ts" />
      <jump line="95" column="0" filename="$USER_HOME$/Projects/personal/crypto/tardis-node/src/realtimefeeds/RealTimeFeedStomp.ts" />
      <jump line="179" column="35" filename="$USER_HOME$/Projects/personal/crypto/tardis-node/src/realtimefeeds/RealTimeFeedStomp.ts" />
      <jump line="182" column="0" filename="$USER_HOME$/Projects/personal/crypto/tardis-node/src/realtimefeeds/RealTimeFeedStomp.ts" />
      <jump line="140" column="38" filename="$USER_HOME$/Projects/personal/crypto/tardis-node/src/realtimefeeds/RealTimeFeedStomp.ts" />
      <jump line="190" column="1" filename="$USER_HOME$/Projects/personal/crypto/tardis-node/src/realtimefeeds/RealTimeFeedStomp.ts" />
      <jump line="6" column="17" filename="$USER_HOME$/Projects/personal/tron-arbitrage/makeMoney.ts" />
      <jump line="64" column="23" filename="$USER_HOME$/Projects/atmosphere/content-digger/src/contentProviders/tidal.js" />
      <jump line="32" column="16" filename="$USER_HOME$/Projects/personal/tron-arbitrage/makeMoney.ts" />
      <jump line="52" column="0" filename="$USER_HOME$/Projects/personal/tron-arbitrage/makeMoney.ts" />
      <jump line="147" column="41" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/components/Waveform.tsx" />
      <jump line="46" column="22" filename="$USER_HOME$/Projects/services/mixpanel-service/src/cleanUsers.ts" />
      <jump line="11" column="319" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/components/RecordButton.tsx" />
      <jump line="54" column="0" filename="$USER_HOME$/Projects/atmosphere/atmosphere-app/packages/remote/src/bootstrap.js" />
      <jump line="48" column="35" filename="$USER_HOME$/Projects/atmosphere/atmosphere-app/packages/node/src/sagas/mqtt.js" />
      <jump line="60" column="19" filename="$USER_HOME$/Projects/atmosphere/atmosphere-app/packages/node/src/services/mqtt.js" />
      <jump line="173" column="38" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/components/WaveRecorder.tsx" />
      <jump line="181" column="58" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/components/WaveRecorder.tsx" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/components/WaveRecorder.tsx" />
      <jump line="23" column="25" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Recording.ts" />
      <jump line="40" column="10" filename="$USER_HOME$/Downloads/z6ujq/src/VoiceRecorder.js" />
      <jump line="31" column="6" filename="$USER_HOME$/Projects/atmosphere/atmosphere-app/Dockerfile.template" />
      <jump line="60" column="0" filename="$USER_HOME$/Projects/atmosphere/atmosphere-app/packages/node/src/services/fileStorage.js" />
      <jump line="121" column="0" filename="$USER_HOME$/Projects/atmosphere/atmosphere-app/packages/node/src/services/fileStorage.js" />
      <jump line="54" column="0" filename="$USER_HOME$/Projects/atmosphere/atmosphere-app/packages/node/src/services/nodePlayer.js" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/atmosphere/atmosphere-app/packages/core/src/sagas/player.js" />
      <jump line="39" column="27" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Recorder.ts" />
      <jump line="55" column="0" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Recorder.ts" />
      <jump line="78" column="0" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/App.tsx" />
      <jump line="86" column="0" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/App.tsx" />
      <jump line="5" column="22" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Player.ts" />
      <jump line="53" column="18" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Player.ts" />
      <jump line="56" column="32" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Player.ts" />
      <jump line="28" column="26" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Player.ts" />
      <jump line="33" column="29" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Player.ts" />
      <jump line="38" column="26" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Player.ts" />
      <jump line="57" column="64" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Player.ts" />
      <jump line="66" column="90" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Player.ts" />
      <jump line="68" column="32" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Player.ts" />
      <jump line="74" column="26" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/services/Player.ts" />
      <jump line="0" column="0" filename="/Dummy.txt" />
      <jump line="25" column="25" filename="$USER_HOME$/Projects/personal/crypto/blockstacks/rcord/src/components/Recording/Recording.tsx" />
      <jump line="62" column="59" filename="$USER_HOME$/Projects/atmosphere/services/streaming-service-sync/src/test.ts" />
      <jump line="3" column="18" filename="$USER_HOME$/Projects/eth-smart-contract/src/uniswap/uniswap.js" />
      <jump line="48" column="14" filename="$USER_HOME$/Projects/personal/eth-arbitrage/src/node/exchanges/Kyber/Kyber.ts" />
      <jump line="14" column="94" filename="$USER_HOME$/Projects/personal/eth-arbitrage/src/node/tokens/TokenMetaResolver.ts" />
      <jump line="35" column="21" filename="$USER_HOME$/Projects/atmosphere/api/app/Jobs/AddLowerBitrateCopy.php" />
      <jump line="21" column="0" filename="$USER_HOME$/Projects/atmosphere/api/tests/Domain/Curation/TotalQuotaTest.php" />
      <jump line="36" column="46" filename="$USER_HOME$/Projects/atmosphere/api/tests/Domain/Track/TrackTest.php" />
      <jump line="33" column="0" filename="$USER_HOME$/Projects/atmosphere/api/tests/Integration/TrackControllerTest.php" />
      <jump line="59" column="27" filename="$USER_HOME$/Projects/test/dgraph/fromJson.ts" />
      <jump line="170" column="0" filename="$USER_HOME$/Projects/test/dgraph/fromJson.ts" />
      <jump line="27" column="0" filename="$USER_HOME$/Projects/atmosphere/api/app/Infrastructure/Normalization/Mp3CloudNormalizer.php" />
      <jump line="79" column="0" filename="$USER_HOME$/Projects/atmosphere/api/app/Infrastructure/Normalization/Mp3CloudNormalizer.php" />
      <jump line="77" column="20" filename="$USER_HOME$/Projects/atmosphere/api/app/Infrastructure/Track/Source/Mp3CloudSilenceStripper.php" />
      <jump line="55" column="29" filename="$USER_HOME$/Projects/atmosphere/api/app/Infrastructure/Queries/Doctrine/Playlist/DoctrinePlaylistQuery.php" />
      <jump line="146" column="20" filename="$USER_HOME$/Projects/scripts/kollekt/payments/getContacts.js" />
      <jump line="131" column="45" filename="$USER_HOME$/Projects/scripts/kollekt/payments/getContacts.js" />
      <jump line="1001" column="0" filename="$USER_HOME$/Projects/scripts/kollekt/payments/contractPages.js" />
      <jump line="131" column="0" filename="$USER_HOME$/Projects/scripts/kollekt/payments/contractPages.js" />
      <jump line="16" column="35" filename="$USER_HOME$/Projects/atmosphere/services/analytics-service/knexfile.js" />
      <jump line="6" column="3" filename="$USER_HOME$/Projects/test/dgraph/remaining.ts" />
      <jump line="13" column="8" filename="$USER_HOME$/Projects/atmosphere/services/analytics-service/src/bin/listener.ts" />
      <jump line="111" column="28" filename="$USER_HOME$/Projects/atmosphere/services/analytics-service/tests/events.test.ts" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/atmosphere/services/analytics-service/deployment/helmfile.yaml" />
      <jump line="21" column="60" filename="$USER_HOME$/Projects/atmosphere/services/analytics-service/deployment/helmfile.yaml" />
      <jump line="12" column="34" filename="$USER_HOME$/Projects/atmosphere/services/analytics-service/src/bin/listener.ts" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/atmosphere/services/analytics-service/src/bin/listener.ts" />
      <jump line="95" column="9" filename="$USER_HOME$/Projects/kollekt/team-dashboard/dashboard.js" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/kollekt/team-dashboard/dashboard.js" />
      <jump line="15" column="13" filename="$USER_HOME$/Projects/atmosphere/payments/app/Events/LocationRegisteredHandler.php" />
      <jump line="30" column="67" filename="$USER_HOME$/Projects/atmosphere/payments/app/InvoiceDetails.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/atmosphere/payments/app/InvoiceDetails.php" />
      <jump line="45" column="0" filename="$USER_HOME$/Projects/atmosphere/payments/app/Http/Controllers/BillingController.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/atmosphere/payments/app/Http/Controllers/BillingController.php" />
      <jump line="34" column="20" filename="$USER_HOME$/Projects/atmosphere/payments/app/Domain/Accounting/BillingAddress.php" />
      <jump line="68" column="0" filename="$USER_HOME$/Projects/atmosphere/payments/app/PubSub/KafkaPublisher.php" />
      <jump line="71" column="32" filename="$USER_HOME$/Projects/atmosphere/payments/app/Providers/SerializerServiceProvider.php" />
      <jump line="39" column="0" filename="$USER_HOME$/Projects/atmosphere/payments/app/Http/Controllers/PaymentsController.php" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/atmosphere/payments/app/Http/Controllers/PaymentsController.php" />
      <jump line="75" column="61" filename="$USER_HOME$/Projects/atmosphere/payments/app/Http/Controllers/BillingController.php" />
      <jump line="38" column="50" filename="$USER_HOME$/Projects/atmosphere/payments/app/Http/Controllers/OrganisationController.php" />
      <jump line="287" column="0" filename="$USER_HOME$/Projects/atmosphere/services/asana-tracking/src/LocationLifeCycle.js" />
      <jump line="10" column="27" filename="$USER_HOME$/Projects/scripts/kollekt/sendBulkEmail/index.js" />
      <jump line="23" column="42" filename="$USER_HOME$/Projects/scripts/kollekt/sendBulkEmail/front.js" />
      <jump line="124" column="42" filename="$USER_HOME$/Projects/atmosphere/api/storage/logs/lumen.log" />
      <jump line="0" column="0" filename="$USER_HOME$/Projects/atmosphere/api/storage/logs/lumen.log" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="&quot;" type="4">
        <text>removeTrackFromPlaylist</text>
      </register>
      <register name="i" type="4">
        <keys>
          <key char="105" code="0" mods="0" />
          <key char="123" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="58" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="39" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="65535" code="9" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="39" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="58" code="0" mods="0" />
          <key char="32" code="0" mods="0" />
          <key char="39" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="36" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="39" code="0" mods="0" />
          <key char="125" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="106" code="0" mods="0" />
          <key char="41" code="0" mods="0" />
        </keys>
      </register>
      <register name="j" type="4">
        <keys>
          <key char="105" code="0" mods="0" />
          <key char="65535" code="127" mods="0" />
          <key char="65535" code="127" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="-" type="4">
        <text>removeTrackFromPlaylist</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDwzMjA5NDc0XD4=</text>
      </register>
      <register name="0" type="4">
        <text>disableTrackTrackInPlaylist</text>
      </register>
      <register name="1" type="2">
        <text>Remove temp file after upload

time:00:15</text>
      </register>
      <register name="q" type="4">
        <text />
      </register>
      <register name="2" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgICAgICAgICAgcmV0dXJuOwo=</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgICAgICAgJG1lc3NhZ2UgPSAK</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgICBpZiggISBlbnYoJ1BVQlNVQl9CUk9LRVJfTElTVCcsIGZhbHNlKSl7CiAgICAgICAgICAgICRtZXNzYWdlID0gJ1B1Ymxpc2hpbmcgJwogICAgICAgICAgICBMb2c6OmRlYnVnKCRldmVudCkKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0K</text>
      </register>
      <register name="v" type="4">
        <text>;</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICAgICAgCg==</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIAo=</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name=":" type="4">
        <text>action AceAction</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-search encoding="base64">XDwzMjA5NDc0XD4=</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDwzMjA5NDc0XD4=</last-pattern>
      <last-replace>Track</last-replace>
      <last-substitute encoding="base64">XDxKU09OXD4=</last-substitute>
      <last-dir>-1</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
  <component name="VimSettings">
    <state version="6" enabled="true" />
    <notifications>
      <idea-join enabled="true" />
      <idea-put enabled="false" />
    </notifications>
  </component>
</application>