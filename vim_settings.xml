<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks>
      <mark key="M" line="21" column="0" filename="$USER_HOME$/projects/atmosphere/billing/app/Kollekt/Billing/Infrastructure/Adapters/MoneyBirdAdapter.php" protocol="file" />
    </globalmarks>
    <filemarks>
      <file name="$USER_HOME$/projects/atmosphere/api/.env" timestamp="1537465912866">
        <mark key="[" line="1" column="14" />
        <mark key="]" line="1" column="14" />
        <mark key="." line="1" column="14" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/AccountingService.php" timestamp="1536179506314">
        <mark key="[" line="158" column="0" />
        <mark key="]" line="158" column="0" />
        <mark key="^" line="161" column="43" />
        <mark key="." line="158" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Jobs/RemoveTrailingSilenceJob.php" timestamp="1537559086968">
        <mark key="[" line="45" column="36" />
        <mark key="]" line="45" column="34" />
        <mark key="." line="45" column="34" />
        <mark key="^" line="45" column="34" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/.env" timestamp="1536592706935">
        <mark key="[" line="3" column="10" />
        <mark key="]" line="3" column="10" />
        <mark key="." line="3" column="10" />
        <mark key="^" line="22" column="9" />
      </file>
      <file name="/a.dummy" timestamp="1537521783109">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Application/UseCase/Playlist/Command/RemovePlaylistItem.php" timestamp="1536857780003">
        <mark key="[" line="15" column="0" />
        <mark key="]" line="15" column="0" />
        <mark key="." line="15" column="0" />
        <mark key="^" line="56" column="14" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/tests/Infrastructure/Track/Source/shell_exec.php" timestamp="1537521004506">
        <mark key="[" line="15" column="15" />
        <mark key="]" line="15" column="15" />
        <mark key="^" line="30" column="33" />
        <mark key="." line="15" column="15" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/atmosphere-app/src/desktop/package.json" timestamp="1536580886015">
        <mark key="[" line="38" column="0" />
        <mark key="]" line="38" column="75" />
        <mark key="." line="38" column="28" />
        <mark key="^" line="38" column="28" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/uptime-spreadsheet/server.js" timestamp="1536872214199">
        <mark key="[" line="2" column="6" />
        <mark key="]" line="2" column="10" />
        <mark key="." line="2" column="10" />
        <mark key="^" line="2" column="10" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/tests/Infrastructure/Track/Source/Mp3SplitTest.php" timestamp="1537439706169">
        <mark key="[" line="16" column="9" />
        <mark key="]" line="16" column="14" />
        <mark key="." line="16" column="14" />
        <mark key="^" line="16" column="14" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Domain/Playlist/PlaylistItem.php" timestamp="1536854226155">
        <mark key="[" line="31" column="0" />
        <mark key="]" line="31" column="42" />
        <mark key="^" line="30" column="62" />
        <mark key="." line="30" column="45" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Http/Kernel.php" timestamp="1535980312631">
        <mark key="[" line="61" column="9" />
        <mark key="]" line="61" column="9" />
        <mark key="^" line="61" column="16" />
        <mark key="." line="61" column="9" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Track/Source/FfmpegSilenceDetector.php" timestamp="1537558686416">
        <mark key="'" line="60" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/PaymentSource.php" timestamp="1535716770921">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
        <mark key="^" line="13" column="22" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/getatmosphere.com/wp-content/themes/atmosphere/style.css" timestamp="1536938658652">
        <mark key="[" line="53" column="0" />
        <mark key="]" line="53" column="0" />
        <mark key="^" line="53" column="0" />
        <mark key="." line="53" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Jobs/RemoveTrack.php" timestamp="1536856703058">
        <mark key="[" line="34" column="0" />
        <mark key="]" line="34" column="0" />
        <mark key="." line="34" column="0" />
        <mark key="^" line="32" column="40" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/atmosphere-app/hooks/before_build.sh" timestamp="1536406374285">
        <mark key="[" line="1" column="0" />
        <mark key="]" line="1" column="0" />
        <mark key="." line="1" column="0" />
        <mark key="^" line="1" column="0" />
      </file>
      <file name="$USER_HOME$/Downloads/tesdsa/client/index.html" timestamp="1537373671233">
        <mark key="[" line="206" column="24" />
        <mark key="]" line="208" column="0" />
        <mark key="." line="208" column="0" />
        <mark key="^" line="208" column="19" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/.env.wercker" timestamp="1536228436377">
        <mark key="[" line="22" column="23" />
        <mark key="]" line="22" column="25" />
        <mark key="^" line="22" column="25" />
        <mark key="." line="22" column="25" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Jobs/test.php" timestamp="1536411602484">
        <mark key="[" line="32" column="23" />
        <mark key="]" line="32" column="23" />
        <mark key="^" line="32" column="23" />
        <mark key="." line="32" column="23" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Http/Middleware/Pincode.php" timestamp="1535977312414">
        <mark key="[" line="24" column="35" />
        <mark key="]" line="24" column="28" />
        <mark key="." line="24" column="28" />
        <mark key="^" line="24" column="28" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/docker-config/jobs/Dockerfile" timestamp="1537463708000">
        <mark key="[" line="18" column="14" />
        <mark key="]" line="18" column="18" />
        <mark key="^" line="18" column="18" />
        <mark key="." line="18" column="18" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/config/queue.php" timestamp="1537363732437">
        <mark key="[" line="48" column="24" />
        <mark key="]" line="48" column="25" />
        <mark key="^" line="48" column="25" />
        <mark key="." line="48" column="25" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Http/Controllers/PaymentsController.php" timestamp="1536589758141">
        <mark key="[" line="39" column="0" />
        <mark key="]" line="42" column="32" />
        <mark key="." line="68" column="54" />
        <mark key="^" line="68" column="55" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/routes/web.php" timestamp="1536592264678">
        <mark key="[" line="16" column="52" />
        <mark key="]" line="16" column="52" />
        <mark key="^" line="16" column="70" />
        <mark key="." line="16" column="52" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/docker-config/jobs/supervisord.conf" timestamp="1535971864781">
        <mark key="[" line="21" column="75" />
        <mark key="]" line="21" column="75" />
        <mark key="." line="21" column="75" />
        <mark key="^" line="21" column="67" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/config/logging.php" timestamp="1536179976058">
        <mark key="[" line="42" column="41" />
        <mark key="]" line="42" column="41" />
        <mark key="." line="42" column="41" />
        <mark key="^" line="42" column="48" />
      </file>
      <file name="$USER_HOME$/Downloads/tesdsa/server/Sources/Mixpanel/index.js" timestamp="1537276775083">
        <mark key="[" line="47" column="0" />
        <mark key="]" line="47" column="13" />
        <mark key="." line="47" column="0" />
        <mark key="^" line="2" column="51" />
      </file>
      <file name="$USER_HOME$/Downloads/tesdsa/server/Sources/Mixpanel/playcount_per_track.js" timestamp="1537276685333">
        <mark key="[" line="7" column="34" />
        <mark key="]" line="7" column="43" />
        <mark key="." line="7" column="43" />
        <mark key="^" line="7" column="43" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/uptime-spreadsheet/Mixpanel.js" timestamp="1536871526906">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="52" column="0" />
        <mark key="^" line="52" column="0" />
        <mark key="." line="52" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/storage/logs/laravel.log" timestamp="1536179872020">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
        <mark key="^" line="0" column="3" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/docker-compose.override.yml" timestamp="1536179915030">
        <mark key="[" line="19" column="44" />
        <mark key="]" line="19" column="44" />
        <mark key="^" line="19" column="7" />
        <mark key="." line="19" column="44" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/database/migrations/2017_08_10_095310_create_billing_address_table.php" timestamp="1535974243112">
        <mark key="[" line="20" column="28" />
        <mark key="]" line="20" column="44" />
        <mark key="." line="20" column="44" />
        <mark key="^" line="20" column="44" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/wercker.yml" timestamp="1536225101974">
        <mark key="[" line="29" column="20" />
        <mark key="]" line="29" column="20" />
        <mark key="." line="29" column="20" />
        <mark key="^" line="35" column="35" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Application.php" timestamp="1537555450617">
        <mark key="[" line="68" column="0" />
        <mark key="]" line="68" column="0" />
        <mark key="." line="68" column="0" />
        <mark key="^" line="66" column="8" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/tests/Infrastructure/Track/Source/Mp3ValidateTest.php" timestamp="1537522260432">
        <mark key="[" line="40" column="13" />
        <mark key="]" line="40" column="13" />
        <mark key="." line="40" column="13" />
        <mark key="^" line="40" column="13" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Normalization/Mp3Gain.php" timestamp="1537480246243">
        <mark key="[" line="18" column="37" />
        <mark key="]" line="18" column="38" />
        <mark key="." line="18" column="38" />
        <mark key="^" line="17" column="17" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/tests/Infrastructure/Track/Source/FfmpegSilenceDetectorTest.php" timestamp="1537559595711">
        <mark key="[" line="31" column="32" />
        <mark key="]" line="31" column="34" />
        <mark key="." line="31" column="34" />
        <mark key="^" line="31" column="34" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Application/UseCase/Playlist/Command/DeletePlaylist.php" timestamp="1536857459250">
        <mark key="[" line="15" column="0" />
        <mark key="]" line="15" column="0" />
        <mark key="." line="15" column="0" />
        <mark key="^" line="39" column="36" />
      </file>
      <file name="/GraphQL.result.json" timestamp="1537276143672">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/config/queue.php" timestamp="1535973874802">
        <mark key="[" line="17" column="38" />
        <mark key="]" line="17" column="47" />
        <mark key="." line="17" column="47" />
        <mark key="^" line="17" column="47" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/Dockerfile" timestamp="1536223765099">
        <mark key="[" line="10" column="0" />
        <mark key="]" line="10" column="0" />
        <mark key="^" line="9" column="26" />
        <mark key="." line="10" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Domain/Organisation/Location/LocationPlaylistMixin.php" timestamp="1536854228306">
        <mark key="[" line="35" column="0" />
        <mark key="]" line="35" column="0" />
        <mark key="^" line="34" column="6" />
        <mark key="." line="35" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/tests/Infrastructure/Repositories/DoctrineLocationRepositoryTest.php" timestamp="1537446818351">
        <mark key="[" line="26" column="0" />
        <mark key="]" line="26" column="16" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Providers/AppServiceProvider.php" timestamp="1536150035104">
        <mark key="[" line="17" column="46" />
        <mark key="]" line="17" column="46" />
        <mark key="^" line="16" column="40" />
        <mark key="." line="17" column="46" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Jobs/HandleStripeWebhook.php" timestamp="1536490151235">
        <mark key="[" line="56" column="89" />
        <mark key="]" line="57" column="21" />
        <mark key="." line="57" column="21" />
        <mark key="^" line="57" column="21" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Jobs/NormalizeSourceVolumeJob.php" timestamp="1537526704960">
        <mark key="[" line="42" column="0" />
        <mark key="]" line="42" column="56" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Domain/Playlist/PlaylistItemRepository.php" timestamp="1536852259027">
        <mark key="[" line="17" column="42" />
        <mark key="]" line="19" column="48" />
        <mark key="^" line="19" column="48" />
        <mark key="." line="19" column="48" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Track/Source/Mp3CloudSilenceStripper.php" timestamp="1537559149710">
        <mark key="[" line="55" column="76" />
        <mark key="]" line="55" column="77" />
        <mark key="." line="55" column="76" />
        <mark key="^" line="61" column="30" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Jobs/DeleteTrackFromStorage.php" timestamp="1536856260099">
        <mark key="[" line="12" column="15" />
        <mark key="]" line="33" column="7" />
        <mark key="^" line="33" column="7" />
        <mark key="." line="33" column="7" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Invoice.php" timestamp="1536754327966">
        <mark key="[" line="80" column="0" />
        <mark key="]" line="80" column="0" />
        <mark key="." line="80" column="0" />
        <mark key="^" line="79" column="13" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Http/Controllers/OrganisationController.php" timestamp="1536592884935">
        <mark key="[" line="21" column="40" />
        <mark key="]" line="21" column="46" />
        <mark key="." line="21" column="46" />
        <mark key="^" line="21" column="46" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Http/Controllers/Payments.php" timestamp="1535708265500">
        <mark key="[" line="18" column="8" />
        <mark key="]" line="18" column="8" />
        <mark key="^" line="18" column="99" />
        <mark key="." line="18" column="8" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/resources/views/pincode.blade.php" timestamp="1536054740983">
        <mark key="[" line="5" column="0" />
        <mark key="]" line="5" column="21" />
        <mark key="^" line="9" column="73" />
        <mark key="." line="5" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/docker-compose.yml" timestamp="1536221751495">
        <mark key="[" line="42" column="0" />
        <mark key="]" line="42" column="0" />
        <mark key="^" line="23" column="47" />
        <mark key="." line="42" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/docker-compose.override.yml" timestamp="1537477355911">
        <mark key="[" line="29" column="0" />
        <mark key="]" line="29" column="44" />
        <mark key="." line="29" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/BillingAddress.php" timestamp="1536055160610">
        <mark key="[" line="9" column="40" />
        <mark key="]" line="9" column="49" />
        <mark key="." line="9" column="49" />
        <mark key="^" line="9" column="49" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Normalization/Mp3CloudNormalizer.php" timestamp="1537529981660">
        <mark key="[" line="47" column="0" />
        <mark key="]" line="48" column="44" />
        <mark key="." line="47" column="24" />
        <mark key="^" line="47" column="19" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Domain/Track/Source/Source.php" timestamp="1537554703751">
        <mark key="[" line="185" column="0" />
        <mark key="]" line="185" column="0" />
        <mark key="^" line="209" column="84" />
        <mark key="." line="185" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Http/Middleware/JwtAuth.php" timestamp="1535980280767">
        <mark key="[" line="10" column="10" />
        <mark key="]" line="38" column="0" />
        <mark key="^" line="36" column="49" />
        <mark key="." line="38" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Jobs/UpdateStripeCustomer.php" timestamp="1536590095709">
        <mark key="[" line="13" column="15" />
        <mark key="]" line="42" column="0" />
        <mark key="^" line="39" column="75" />
        <mark key="." line="42" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/resources/views/strip-creditcard.blade.php" timestamp="1536186544178">
        <mark key="[" line="13" column="11" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/public/js/stripe.js" timestamp="1536228138927">
        <mark key="[" line="0" column="21" />
        <mark key="]" line="0" column="52" />
        <mark key="." line="0" column="29" />
        <mark key="^" line="0" column="29" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/routes/api.php" timestamp="1535998986865">
        <mark key="[" line="22" column="14" />
        <mark key="]" line="22" column="23" />
        <mark key="." line="22" column="23" />
        <mark key="^" line="22" column="23" />
      </file>
      <file name="$USER_HOME$/Downloads/tesdsa/server/server.js" timestamp="1537367488651">
        <mark key="[" line="104" column="23" />
        <mark key="]" line="104" column="26" />
        <mark key="." line="104" column="26" />
        <mark key="^" line="104" column="26" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Mandate.php" timestamp="1535630263857">
        <mark key="[" line="19" column="8" />
        <mark key="]" line="19" column="7" />
        <mark key="." line="19" column="7" />
        <mark key="^" line="19" column="7" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/uptime-spreadsheet/MainApi.js" timestamp="1536871945816">
        <mark key="[" line="36" column="0" />
        <mark key="]" line="36" column="0" />
        <mark key="^" line="46" column="1" />
        <mark key="." line="36" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Track/Source/Mp3Split.php" timestamp="1537547900828">
        <mark key="[" line="25" column="0" />
        <mark key="]" line="25" column="0" />
        <mark key="^" line="24" column="35" />
        <mark key="." line="25" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Application/UseCase/Track/Command/RemoveTrack.php" timestamp="1536855309061">
        <mark key="[" line="10" column="1" />
        <mark key="]" line="12" column="26" />
        <mark key="^" line="12" column="26" />
        <mark key="." line="12" column="26" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Track/Source/Mp3Validate.php" timestamp="1537457790837">
        <mark key="[" line="6" column="12" />
        <mark key="]" line="12" column="16" />
        <mark key="." line="12" column="16" />
        <mark key="^" line="12" column="16" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/resources/views/payments.blade.php" timestamp="1536228662531">
        <mark key="[" line="18" column="62" />
        <mark key="]" line="18" column="71" />
        <mark key="." line="18" column="62" />
        <mark key="^" line="18" column="21" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/docker-compose.yml" timestamp="1537477369553">
        <mark key="[" line="28" column="0" />
        <mark key="]" line="28" column="0" />
        <mark key="." line="28" column="0" />
        <mark key="^" line="40" column="9" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/uptime-spreadsheet/index.js" timestamp="1536872121136">
        <mark key="[" line="5" column="23" />
        <mark key="]" line="6" column="0" />
        <mark key="^" line="6" column="0" />
        <mark key="." line="6" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Track/Source/Mp3Validator.php" timestamp="1537522123466">
        <mark key="[" line="13" column="30" />
        <mark key="]" line="13" column="30" />
        <mark key="^" line="38" column="39" />
        <mark key="." line="13" column="30" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/resources/views/intro.blade.php" timestamp="1536304240027">
        <mark key="[" line="4" column="23" />
        <mark key="]" line="4" column="23" />
        <mark key="." line="4" column="23" />
        <mark key="^" line="3" column="53" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Track/Source/SilenceDetection.php" timestamp="1537442474154">
        <mark key="[" line="6" column="6" />
        <mark key="]" line="6" column="6" />
        <mark key="." line="6" column="6" />
        <mark key="^" line="6" column="9" />
      </file>
      <file name="/Dummy.txt" timestamp="1537556455207">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/atmosphere-app/hooks/before_run.sh" timestamp="1536406433150">
        <mark key="[" line="1" column="0" />
        <mark key="]" line="1" column="0" />
        <mark key="." line="1" column="0" />
        <mark key="^" line="1" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Repositories/DoctrinePlaylistItemRepository.php" timestamp="1536852404345">
        <mark key="[" line="30" column="8" />
        <mark key="]" line="30" column="8" />
        <mark key="." line="30" column="8" />
        <mark key="^" line="30" column="14" />
      </file>
      <file name="$USER_HOME$/Downloads/tesdsa/server/Sources/Mixpanel/skips_vs_age.js" timestamp="1537278228154">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/PaymentService.php" timestamp="1536754361006">
        <mark key="[" line="65" column="52" />
        <mark key="]" line="65" column="52" />
        <mark key="." line="65" column="52" />
        <mark key="^" line="65" column="52" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/tests/TestCase.php" timestamp="1537520514782">
        <mark key="[" line="4" column="0" />
        <mark key="]" line="4" column="0" />
        <mark key="." line="4" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/app/Jobs/HandleMoneybirdWebhook.php" timestamp="1536412113228">
        <mark key="[" line="57" column="61" />
        <mark key="]" line="58" column="17" />
        <mark key="^" line="58" column="17" />
        <mark key="." line="58" column="17" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/uptime-spreadsheet/.env" timestamp="1536914038482">
        <mark key="[" line="2" column="19" />
        <mark key="]" line="0" column="27" />
        <mark key="^" line="0" column="27" />
        <mark key="." line="0" column="27" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/storage/logs/lumen.log" timestamp="1537553634937">
        <mark key="'" line="1" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/Data.Dockerfile" timestamp="1536226976402">
        <mark key="[" line="14" column="19" />
        <mark key="]" line="14" column="18" />
        <mark key="^" line="14" column="18" />
        <mark key="." line="14" column="18" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/payments/public/css/app.css" timestamp="1536304078969">
        <mark key="[" line="124" column="0" />
        <mark key="]" line="124" column="0" />
        <mark key="." line="124" column="0" />
        <mark key="^" line="123" column="0" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/api/app/Http/routes.php" timestamp="1537465302031">
        <mark key="[" line="21" column="30" />
        <mark key="]" line="21" column="37" />
        <mark key="^" line="21" column="37" />
        <mark key="." line="21" column="37" />
      </file>
      <file name="$USER_HOME$/projects/atmosphere/uptime-spreadsheet/src/MainApi.js" timestamp="1536873648307">
        <mark key="[" line="34" column="24" />
        <mark key="]" line="34" column="24" />
        <mark key="." line="34" column="24" />
        <mark key="^" line="28" column="18" />
      </file>
    </filemarks>
    <jumps>
      <jump line="0" column="0" filename="$USER_HOME$/projects/atmosphere/api/vendor/nmred/kafka-php/src/Kafka/Consumer/Process.php" />
      <jump line="173" column="1" filename="$USER_HOME$/projects/atmosphere/getatmosphere.com/wp-content/themes/atmosphere/pages/how-we-work.css" />
      <jump line="24" column="4" filename="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Logging/Logger.php" />
      <jump line="152" column="72" filename="$USER_HOME$/projects/atmosphere/getatmosphere.com/wp-content/themes/atmosphere/pages/how-we-work.php" />
      <jump line="0" column="0" filename="$USER_HOME$/projects/atmosphere/getatmosphere.com/wp-content/themes/atmosphere/pages/how-we-work.php" />
      <jump line="40" column="11" filename="$USER_HOME$/projects/atmosphere/api/app/Providers/ExceptionServiceProvider.php" />
      <jump line="51" column="44" filename="$USER_HOME$/projects/kollekt/atmosphere-backstage/src/app/components/LocationAccountDelegation.js" />
      <jump line="157" column="0" filename="$USER_HOME$/projects/kollekt/atmosphere-backstage/src/app/components/Location.js" />
      <jump line="314" column="0" filename="$USER_HOME$/projects/kollekt/atmosphere-backstage/src/app/components/AccountDelegationSetup.js" />
      <jump line="52" column="20" filename="$USER_HOME$/projects/services/AccountCreationDelegation/index.js" />
      <jump line="34" column="19" filename="$USER_HOME$/projects/services/AccountCreationDelegation/AccountDelegationRequest.js" />
      <jump line="20" column="41" filename="$USER_HOME$/projects/services/AccountCreationDelegation/AccountDelegationRequest.js" />
      <jump line="38" column="0" filename="$USER_HOME$/projects/services/AccountCreationDelegation/AtmosphereApi.js" />
      <jump line="1" column="0" filename="$USER_HOME$/projects/kollekt/atmosphere-graphql/data/schema.js" />
      <jump line="16" column="4" filename="$USER_HOME$/projects/atmosphere/api/app/Http/Controllers/EmailController.php" />
      <jump line="138" column="24" filename="$USER_HOME$/projects/kollekt/atmosphere-graphql/data/schema.js" />
      <jump line="322" column="37" filename="$USER_HOME$/projects/kollekt/atmosphere-backstage/src/app/components/AccountDelegationSetup.js" />
      <jump line="216" column="60" filename="$USER_HOME$/projects/atmosphere/api/app/Http/Presenters/AbstractPresenter.php" />
      <jump line="17" column="62" filename="$USER_HOME$/projects/services/AccountCreationDelegation/src/events/EventPublisher.js" />
      <jump line="80" column="0" filename="$USER_HOME$/projects/atmosphere/content-digger/search/deezer.js" />
      <jump line="0" column="0" filename="$USER_HOME$/projects/atmosphere/content-digger/search/deezer.js" />
      <jump line="98" column="0" filename="$USER_HOME$/projects/atmosphere/content-digger/search/deezer.js" />
      <jump line="35" column="60" filename="$USER_HOME$/projects/atmosphere/api/app/Domain/ValueObject/Contact.php" />
      <jump line="64" column="11" filename="$USER_HOME$/projects/services/mariabackup/index.js" />
      <jump line="0" column="20" filename="$USER_HOME$/projects/services/mariabackup/src/MariaBackup.js" />
      <jump line="76" column="0" filename="$USER_HOME$/projects/services/mariabackup/src/MariaBackup.js" />
      <jump line="15" column="17" filename="$USER_HOME$/projects/services/mariabackup/index.js" />
      <jump line="20" column="0" filename="$USER_HOME$/projects/docker/images/mariabackup/docker-entrypoint.sh" />
      <jump line="63" column="1" filename="$USER_HOME$/projects/services/asana-tracking/src/LocationLifeCycle.js" />
      <jump line="161" column="7" filename="$USER_HOME$/projects/atmosphere/atmosphere-backstage/src/app/components/AsanaTask.js" />
      <jump line="75" column="2" filename="$USER_HOME$/projects/services/asana-tracking/src/LocationLifeCycle.js" />
      <jump line="111" column="48" filename="$USER_HOME$/projects/atmosphere/atmosphere-backstage/src/app/components/AsanaTask.js" />
      <jump line="204" column="1" filename="$USER_HOME$/projects/atmosphere/content-digger/search/fullText.js" />
      <jump line="162" column="15" filename="$USER_HOME$/projects/atmosphere/content-digger-extension/src/Components/SearchResults.js" />
      <jump line="79" column="0" filename="$USER_HOME$/projects/atmosphere/content-digger/src/search/deezer.js" />
      <jump line="84" column="0" filename="$USER_HOME$/projects/atmosphere/content-digger/src/search/deezer.js" />
      <jump line="28" column="11" filename="$USER_HOME$/projects/atmosphere/content-digger/src/test.js" />
      <jump line="74" column="40" filename="$USER_HOME$/projects/atmosphere/content-digger-extension/src/Components/SearchResults.js" />
      <jump line="81" column="0" filename="$USER_HOME$/projects/atmosphere/content-digger-extension/src/Components/SearchResults.js" />
      <jump line="26" column="48" filename="$USER_HOME$/projects/atmosphere/content-digger/src/search/index.js" />
      <jump line="23" column="37" filename="$USER_HOME$/projects/atmosphere/content-digger/src/search/index.js" />
      <jump line="176" column="19" filename="$USER_HOME$/projects/atmosphere/getatmosphere.com/wp-content/themes/atmosphere/js/script.js" />
      <jump line="0" column="1" filename="$USER_HOME$/projects/atmosphere/content-digger-extension/src/Components/SearchResults.js" />
      <jump line="41" column="8" filename="$USER_HOME$/projects/atmosphere/content-digger/docker-compose.wercker.yml" />
      <jump line="0" column="0" filename="$USER_HOME$/projects/atmosphere/content-digger/docker-compose.wercker.yml" />
      <jump line="6" column="33" filename="$USER_HOME$/projects/atmosphere/content-digger/src/processes/downloadProcess.js" />
      <jump line="5" column="28" filename="$USER_HOME$/projects/atmosphere/content-digger-extension/src/services/api.js" />
      <jump line="92" column="4" filename="$USER_HOME$/projects/atmosphere/atmosphere-app/src/app/services/remotePlayerRepo.js" />
      <jump line="349" column="24" filename="$USER_HOME$/projects/atmosphere/atmosphere-app/platforms/android/src/com/scott/plugin/ServiceDiscovery.java" />
      <jump line="7" column="2" filename="$USER_HOME$/projects/atmosphere/atmosphere-app/src/app/services/sonos/connector.js" />
      <jump line="54" column="0" filename="$USER_HOME$/projects/atmosphere/atmosphere-app/src/app/services/sonos/SonosController.js" />
      <jump line="23" column="49" filename="$USER_HOME$/projects/atmosphere/atmosphere-app/src/app/services/sonos/SonosController.js" />
      <jump line="63" column="0" filename="$USER_HOME$/projects/atmosphere/atmosphere-app/src/app/services/sonos/playback.js" />
      <jump line="108" column="0" filename="$USER_HOME$/projects/atmosphere/atmosphere-app/src/app/services/sonos/cloudQueue.js" />
      <jump line="37" column="18" filename="$USER_HOME$/projects/atmosphere/atmosphere-app/src/app/services/backgroundAudio.js" />
      <jump line="17" column="0" filename="$USER_HOME$/projects/atmosphere/atmosphere-app/src/app/services/sonos/global.js" />
      <jump line="65" column="16" filename="$USER_HOME$/projects/atmosphere/atmosphere-app/src/app/services/sonos/cloudQueue.js" />
      <jump line="1591" column="24" filename="$USER_HOME$/projects/personal/desluwevos.com/wp-content/themes/desluwevos/style.css" />
      <jump line="72" column="62" filename="$USER_HOME$/projects/atmosphere/api/app/Http/Controllers/PlaylistController.php" />
      <jump line="82" column="11" filename="$USER_HOME$/projects/atmosphere/api/app/Domain/Organisation/Location/Location.php" />
      <jump line="67" column="18" filename="$USER_HOME$/projects/atmosphere/api/app/Domain/Organisation/Location/Location.php" />
      <jump line="72" column="70" filename="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/User/MyCLabsUserRoleService.php" />
      <jump line="8" column="66" filename="$USER_HOME$/projects/atmosphere/api/app/Listeners/LocationAddressListener.php" />
      <jump line="37" column="4" filename="$USER_HOME$/projects/atmosphere/api/.env" />
      <jump line="56" column="24" filename="$USER_HOME$/projects/atmosphere/content-digger/src/deezer/deezer-api-new.js" />
      <jump line="20" column="0" filename="$USER_HOME$/projects/services/AccountCreationDelegation/src/index.js" />
      <jump line="93" column="8" filename="$USER_HOME$/projects/atmosphere/content-digger/src/deezer/deezer-api-new.js" />
      <jump line="10" column="0" filename="$USER_HOME$/projects/atmosphere/content-digger/src/deezer/deezer-api-new.js" />
      <jump line="74" column="21" filename="$USER_HOME$/projects/services/AccountCreationDelegation/src/mailEventHandler.js" />
      <jump line="81" column="10" filename="$USER_HOME$/projects/services/AccountCreationDelegation/src/mailEventHandler.js" />
      <jump line="124" column="0" filename="$USER_HOME$/projects/services/AccountCreationDelegation/src/mailEventHandler.js" />
      <jump line="117" column="6" filename="$USER_HOME$/projects/services/AccountCreationDelegation/src/index.js" />
      <jump line="103" column="29" filename="$USER_HOME$/projects/atmosphere/content-digger/src/deezer/deezer-api-new.js" />
      <jump line="46" column="116" filename="$USER_HOME$/projects/atmosphere/api/app/Domain/Organisation/Location/LocationPlaylist.php" />
      <jump line="0" column="0" filename="$USER_HOME$/projects/atmosphere/api/app/Http/Controllers/AuthenticationController.php" />
      <jump line="0" column="0" filename="$USER_HOME$/projects/atmosphere/atmosphere-app/src/app/services/backgroundAudio.js" />
      <jump line="170" column="9" filename="$USER_HOME$/projects/atmosphere/api/app/Http/Controllers/PlaylistController.php" />
      <jump line="8350" column="0" filename="$USER_HOME$/projects/atmosphere/payments/public/css/app.css" />
      <jump line="4" column="1" filename="$USER_HOME$/projects/atmosphere/payments/public/css/stripe.css" />
      <jump line="16" column="17" filename="$USER_HOME$/projects/atmosphere/payments/resources/views/strip-creditcard.blade.php" />
      <jump line="0" column="0" filename="$USER_HOME$/projects/atmosphere/payments/resources/views/strip-creditcard.blade.php" />
      <jump line="4" column="0" filename="$USER_HOME$/projects/atmosphere/payments/public/js/stripe.js" />
      <jump line="28" column="0" filename="$USER_HOME$/projects/atmosphere/payments/public/css/stripe.css" />
      <jump line="12" column="17" filename="$USER_HOME$/projects/atmosphere/payments/app/InvoiceDetails.php" />
      <jump line="443" column="9" filename="$USER_HOME$/projects/atmosphere/payments/storage/logs/laravel.log" />
      <jump line="0" column="0" filename="$USER_HOME$/projects/atmosphere/payments/storage/logs/laravel.log" />
      <jump line="2381" column="44" filename="$USER_HOME$/projects/atmosphere/payments/storage/logs/laravel.log" />
      <jump line="73" column="43" filename="$USER_HOME$/projects/atmosphere/payments/storage/logs/app.log" />
      <jump line="0" column="0" filename="$USER_HOME$/projects/atmosphere/payments/storage/logs/app.log" />
      <jump line="94" column="3" filename="$USER_HOME$/projects/atmosphere/uptime-spreadsheet/src/Mixpanel.js" />
      <jump line="107" column="0" filename="$USER_HOME$/projects/atmosphere/uptime-spreadsheet/src/Mixpanel.js" />
      <jump line="4" column="0" filename="$USER_HOME$/projects/atmosphere/uptime-spreadsheet/src/index.js" />
      <jump line="19" column="0" filename="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Track/Source/FfmpegSilenceDetector.php" />
      <jump line="53" column="0" filename="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Track/Source/FfmpegSilenceDetector.php" />
      <jump line="14" column="65" filename="$USER_HOME$/projects/atmosphere/api/tests/Infrastructure/Track/Source/FfmpegSilenceDetectorTest.php" />
      <jump line="19" column="16" filename="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Track/Source/Mp3Split.php" />
      <jump line="71" column="8" filename="$USER_HOME$/projects/atmosphere/api/app/Application.php" />
      <jump line="50" column="0" filename="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Normalization/Mp3CloudNormalizer.php" />
      <jump line="20" column="27" filename="$USER_HOME$/projects/atmosphere/api/app/Infrastructure/Track/Source/Mp3Split.php" />
      <jump line="139" column="0" filename="$USER_HOME$/projects/atmosphere/api/storage/logs/lumen.log" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text>33</text>
      </register>
      <register name="j" type="4">
        <keys>
          <key char="105" code="0" mods="0" />
          <key char="65535" code="127" mods="0" />
          <key char="65535" code="127" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="-" type="4">
        <text>33</text>
      </register>
      <register name="/" type="4">
        <text encoding="base64">XDxpZlw+</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAgICAgICAkdGhpcy0+bG9jYWxGaWxlU3lzdGVtLT5kZWxldGVGaWxlKCRmaWxlRGVzdCk7Cg==</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="q" type="4">
        <text>df:xj</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">Ly8gICAgICAgIGRpc3BhdGNoKG5ldyBQdXJnZVNvdXJjZUNhY2hlSm9iKCRzb3VyY2UpKTsKCg==</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgICAgICAgcHJpbnRfcigkZXJyb3JNc2cuIlxuIik7Cg==</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ICAgICAgICAkdGhpcy0+bm9ybWFsaXplZFZvbHVtZSA9ICRkZWNpYmVsczsK</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgICAgICAgJHRoaXMtPnRyYWNrVGl0bGUgPSByYW5kKDAsIDEwMCk7Cg==</text>
      </register>
      <register name="v" type="4">
        <text>;</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICBwcmludF9yKCJGaWxlIHN0b3JlZFxuIik7Cg==</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgICAgICAgJHRoaXMtPmxvY2tNYW5hZ2VyLT5zdG9wcGVkUHJvY2Vzc2luZygkc291cmNlKTsK</text>
      </register>
      <register name=":" type="4">
        <text>vsp</text>
      </register>
    </registers>
    <search>
      <last-search encoding="base64">XDxpZlw+</last-search>
      <last-offset />
      <last-pattern encoding="base64">XDxpZlw+</last-pattern>
      <last-replace>Track</last-replace>
      <last-substitute>Playlist</last-substitute>
      <last-dir>-1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>from</entry>
        <entry>mbToken</entry>
        <entry>TOKEN_PATH</entry>
        <entry encoding="base64">XDxjb25zb2xlXD4=</entry>
        <entry encoding="base64">XDx0ZXN0XD4=</entry>
        <entry encoding="base64">XDxyclw+</entry>
        <entry encoding="base64">XDxsb3dlcl9jYXNlX3RhYmxlX25hbWVzXD4=</entry>
        <entry encoding="base64">XDxwb2xhcm9pZFw+</entry>
        <entry encoding="base64">XDxwcml2YXRlXD4=</entry>
        <entry encoding="base64">XDxwdWJsaWNcPg==</entry>
        <entry encoding="base64">XDx0aGVuXD4=</entry>
        <entry encoding="base64">XDx0b2RvXD4=</entry>
        <entry encoding="base64">XDx3aW5kb3dcPg==</entry>
        <entry encoding="base64">XDxBZGRDdXJhdG9yXD4=</entry>
        <entry encoding="base64">XDxmdW5jdGlvblw+</entry>
        <entry encoding="base64">XDxQVUJTVUJfQlJPS0VSX0xJU1RcPg==</entry>
        <entry encoding="base64">XDwnXD4=</entry>
        <entry encoding="base64">XDxhd2FpdFw+</entry>
        <entry>Playlist</entry>
        <entry encoding="base64">XDxpZlw+</entry>
      </history-search>
      <history-cmd>
        <entry encoding="base64">YWN0aW9uIEFjZUp1bXBBY3Rpb248Y3I+</entry>
        <entry>actionlist Ace</entry>
        <entry>actionlist AceJump</entry>
        <entry>actionlist jump</entry>
        <entry>actionlist AceA</entry>
        <entry encoding="base64">bm5vcmVtYXAgc3MgOmFjdGlvbiBBY2VBY3Rpb248Y3I+IA==</entry>
        <entry>action MoveLineDown</entry>
        <entry>action MoveLineUp</entry>
        <entry>s</entry>
        <entry>action SplitVertically</entry>
        <entry>action SplitHorizontally</entry>
        <entry>action TabShiftActions.MoveFocusUp</entry>
        <entry>vs</entry>
        <entry>action TabShiftActions.MoveFocusDown</entry>
        <entry>sp</entry>
        <entry>action TabShiftActions.MoveFocusLeft</entry>
        <entry>action TabShiftActions.MoveFocusRight</entry>
        <entry>w</entry>
        <entry>action AceAction</entry>
        <entry>vsp</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>shift ctrl pressed 6</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>shift ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
    </shortcut-conflicts>
    <editor>
      <key-repeat enabled="true" />
    </editor>
  </component>
</application>